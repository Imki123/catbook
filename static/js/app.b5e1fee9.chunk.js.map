{"version":3,"sources":["styles.js","component/GithubIcon.jsx","container/BreedInfoPage.jsx","App.jsx","assets/dog_main.png","assets/main.png","assets/github_small.png"],"names":["screenWidth","Math","round","Dimensions","get","width","styles","StyleSheet","create","safeContainer","flex","alignItems","justifyContent","marginTop","Constants","statusBarHeight","contentContainer","flexGrow","container","maxWidth","title","fontSize","fontWeight","image","height","resizeMode","marginBottom","picker","backgroundColor","button","paddingHorizontal","paddingVertical","borderRadius","buttonDisabled","buttonText","color","textContainer","textAlign","contentText","changeBookView","display","flexDirection","changeBookText","margin","padding","stackTitle","stackView","stackRow","gap","stackFlex","stackImg","stackText","paddingLeft","cursor","footer","plainText","linkText","textDecorationLine","githubImg","marginHorizontal","GithubIcon","TouchableOpacity","style","Text","onPress","Linking","openURL","Image","source","gitHubIcon","BreedInfoPage","useState","whatBook","setWhatBook","imageUri","setImageUri","breeds","setBreeds","breed","setBreed","breedInfo","setBreedInfo","randomable","setRandomable","stack","setStack","open","setOpen","useEffect","body","document","querySelector","overflow","backHandler","BackHandler","addEventListener","Alert","alert","text","exitApp","remove","url","axios","then","res","items","label","value","i","data","length","push","name","id","searchCatAsync","useCallback","searchBreed","num","floor","random","api_url","withCredentials","animal","finded","find","item","state","concat","ScrollView","contentContainerStyle","centerContent","View","catMain","dogMain","uri","undefined","alt_names","origin","adaptability","affection_level","energy_level","child_friendly","dog_friendly","temperament","description","setValue","setItems","disabled","onClick","map","idx","pressStack","App","SafeAreaView","console","info","process","module","exports"],"mappings":"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","file":"static/js/app.b5e1fee9.chunk.js","sourcesContent":["import { StyleSheet, Dimensions } from 'react-native'\r\n\r\nimport Constants from 'expo-constants'\r\n\r\nconst screenWidth = Math.round(Dimensions.get('window').width)\r\n\r\nlet styles = StyleSheet.create({\r\n\tsafeContainer: {\r\n\t\tflex: 1,\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t\tmarginTop: Constants.statusBarHeight,\r\n\t},\r\n\tcontentContainer: {\r\n\t\tflexGrow: 1,\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'space-between',\r\n\t},\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t\twidth: screenWidth,\r\n\t\tmaxWidth: 600,\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 30,\r\n\t\tfontWeight: 'bold',\r\n\t},\r\n\timage: {\r\n\t\twidth: '100%',\r\n\t\theight: 300,\r\n\t\tresizeMode: 'contain',\r\n\t\tmarginBottom: 10,\r\n\t},\r\n\r\n\tpicker: {\r\n\t\twidth: screenWidth - 100,\r\n\t\tmaxWidth: 500,\r\n\t\theight: 30,\r\n\t\tbackgroundColor: '#eee',\r\n\t\tmarginTop: 10,\r\n\t\tmarginBottom: 10,\r\n\t},\r\n\tbutton: {\r\n\t\tbackgroundColor: 'blue',\r\n\t\tpaddingHorizontal: 20,\r\n\t\tpaddingVertical: 15,\r\n\t\tborderRadius: 5,\r\n\t},\r\n\tbuttonDisabled: {\r\n\t\tbackgroundColor: 'gray',\r\n\t\tpaddingHorizontal: 20,\r\n\t\tpaddingVertical: 15,\r\n\t\tborderRadius: 5,\r\n\t},\r\n\tbuttonText: {\r\n\t\tfontSize: 20,\r\n\t\tcolor: '#fff',\r\n\t},\r\n\ttextContainer: {\r\n\t\ttextAlign: 'left',\r\n\t\twidth: screenWidth - 100,\r\n\t\tmaxWidth: 500,\r\n\t},\r\n\tcontentText: {\r\n\t\tfontSize: 16,\r\n\t},\r\n\tchangeBookView: {\r\n\t\twidth: screenWidth,\r\n\t\tmaxWidth: 600,\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\tjustifyContent: 'space-between',\r\n\t},\r\n\tchangeBookText: {\r\n\t\tmargin: 0,\r\n\t\tfontSize: 16,\r\n\t\tcolor: 'blue',\r\n\t\tpadding: 10,\r\n\t},\r\n\tstackTitle: {\r\n\t\tfontSize: 16,\r\n\t\tcolor: 'black',\r\n\t\ttextAlign: 'left',\r\n\t},\r\n\tstackView: {\r\n\t\tdisplay: 'flex',\r\n\t\twidth: screenWidth - 100,\r\n\t\tmaxWidth: 500,\r\n\t\ttextAlign: 'left',\r\n\t},\r\n\tstackRow: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\tjustifyContent: 'flex-start',\r\n\t\talignItems: 'center',\r\n\t\tgap: 10,\r\n\t},\r\n\tstackFlex: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\tjustifyContent: 'flex-start',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tstackImg: {\r\n\t\twidth: 50,\r\n\t\theight: 50,\r\n\t\tresizeMode: 'contain',\r\n\t},\r\n\tstackText: {\r\n\t\tmargin: 0,\r\n\t\tfontSize: 16,\r\n\t\tcolor: 'blue',\r\n\t\tpaddingLeft: 12,\r\n\t\tcursor: 'pointer',\r\n\t},\r\n\tfooter: {\r\n\t\twidth: screenWidth,\r\n\t\tmaxWidth: 600,\r\n\t\tmarginBottom: 4,\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\tjustifyContent: 'flex-end',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tplainText: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tlinkText: {\r\n\t\tmargin: 0,\r\n\t\tfontSize: 14,\r\n\t\tcolor: 'blue',\r\n\t\ttextDecorationLine: 'underline',\r\n\t},\r\n\tgithubImg: {\r\n\t\twidth: 20,\r\n\t\theight: 20,\r\n\t\tmarginHorizontal: 4,\r\n\t\tresizeMode: 'contain',\r\n\t},\r\n})\r\n\r\nexport { styles }\r\n","import React from 'react'\r\nimport { Image, Linking, Text, TouchableOpacity } from 'react-native'\r\n\r\nimport gitHubIcon from '../assets/github_small.png'\r\nimport { styles } from '../styles'\r\n\r\nconst GithubIcon = () => {\r\n  return (\r\n    <TouchableOpacity style={styles.footer}>\r\n      <Text\r\n        style={styles.linkText}\r\n        onPress={() => Linking.openURL('https://github.com/imki123')}\r\n      >\r\n        imki123\r\n      </Text>\r\n      <Image source={gitHubIcon} style={styles.githubImg} />\r\n    </TouchableOpacity>\r\n  )\r\n}\r\n\r\nexport default GithubIcon\r\n","/* eslint-disable react-native/no-inline-styles */\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport {\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  Alert,\r\n  BackHandler,\r\n  ScrollView,\r\n} from 'react-native'\r\nimport DropDownPicker from 'react-native-dropdown-picker'\r\n\r\nimport axios from 'axios'\r\n\r\nimport dogMain from '../assets/dog_main.png'\r\nimport catMain from '../assets/main.png'\r\nimport GithubIcon from '../component/GithubIcon.jsx'\r\nimport { styles } from '../styles'\r\n\r\nconst BreedInfoPage = () => {\r\n  const [whatBook, setWhatBook] = useState('cat') //book 선택\r\n  const [imageUri, setImageUri] = useState(null) //이미지 url\r\n  const [breeds, setBreeds] = useState([]) //종 리스트\r\n  const [breed, setBreed] = useState('') //선택한 고양이 종류\r\n  const [breedInfo, setBreedInfo] = useState(null) //고양이 정보\r\n  const [randomable, setRandomable] = useState(false) //랜덤검색 가능여부\r\n  const [stack, setStack] = useState([]) //검색 히스토리\r\n  const [open, setOpen] = useState(false)\r\n\r\n  // effect\r\n  useEffect(() => {\r\n    const body = document.querySelector('body')\r\n    if (body) {\r\n      if (open) {\r\n        body.style.overflow = 'hidden'\r\n      } else {\r\n        body.style.overflow = 'auto'\r\n      }\r\n    }\r\n  }, [open])\r\n\r\n  useEffect(() => {\r\n    //백버튼 종료 확인하기 useEffect에서 동작해야함\r\n    const backAction = () => {\r\n      Alert.alert('Catbook 종료', 'Catbook을 종료하시겠어요?', [\r\n        {\r\n          text: 'Cancel',\r\n          onPress: () => null,\r\n          style: 'cancel',\r\n        },\r\n        {\r\n          text: 'Yes',\r\n          onPress: () => {\r\n            setImageUri(null)\r\n            setBreedInfo(null)\r\n            setBreed('')\r\n            setWhatBook('cat')\r\n            BackHandler.exitApp()\r\n          },\r\n        },\r\n      ])\r\n      return true\r\n    }\r\n    const backHandler = BackHandler.addEventListener(\r\n      'hardwareBackPress',\r\n      backAction,\r\n    )\r\n\r\n    return () => backHandler.remove()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    //고양이종 리스트 가져오기. 한번만\r\n    let url = `https://api.the${whatBook}api.com/v1/breeds`\r\n\r\n    axios(url).then((res) => {\r\n      const items = [{ label: '랜덤', value: 'random' }]\r\n      for (let i = 0; i < res.data.length; i++) {\r\n        items.push({\r\n          label: res.data[i].name,\r\n          value: res.data[i].id,\r\n        })\r\n      }\r\n      setBreeds(items)\r\n      setRandomable(true)\r\n    })\r\n  }, [whatBook])\r\n\r\n  useEffect(() => {\r\n    //고양이 종류 바뀌면 작동. 이미지 새로 가져오기\r\n    if (breed === '') {\r\n      //''이면 아무것도 안함. 메인이미지.\r\n    } else {\r\n      searchCatAsync()\r\n    }\r\n  }, [breed, searchCatAsync])\r\n\r\n  //찾기 버튼 클릭시\r\n  const handleButton = () => {\r\n    if (breed === '') {\r\n      //''이면 랜덤으로 설정\r\n      setBreed('random')\r\n    } else {\r\n      searchCatAsync()\r\n    }\r\n  }\r\n\r\n  //고양이 정보 가져오기\r\n  const searchCatAsync = useCallback(() => {\r\n    let searchBreed = breed\r\n    if (breed === 'random') {\r\n      //랜덤 이미지 가져오기\r\n      if (randomable) {\r\n        //랜덤검색이 가능할때만\r\n        let num = Math.floor(Math.random() * breeds.length) + 1 //고양이 종류만큼 정수 난수 생성 0번 제외\r\n        searchBreed = breeds?.[num]?.value\r\n      }\r\n    }\r\n\r\n    //이미지 및 정보 가져오기\r\n    const api_url =\r\n      process.env.NODE_ENV === 'development'\r\n        ? 'http://localhost:4001'\r\n        : 'https://expressgoyoung2-production.up.railway.app'\r\n    axios\r\n      .get(api_url + `/catbook/getAnimal/${whatBook}/${searchBreed}`, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        if (res.data[0]) {\r\n          setImageUri(res.data[0].url)\r\n          setBreedInfo(res.data[0])\r\n\r\n          //검색 기록 추가하기 stack\r\n          res.data[0].animal = whatBook\r\n          if (!res.data[0].breeds?.[0]?.name) {\r\n            const finded = breeds?.find((item) => item.value === searchBreed)\r\n            res.data[0].breeds = [{ name: finded?.label || searchBreed }]\r\n          }\r\n          setStack((state) => [res.data[0]].concat(state))\r\n        } else {\r\n          setImageUri(null)\r\n          setBreedInfo('noInfo')\r\n        }\r\n      })\r\n  }, [breed, breeds, randomable, whatBook])\r\n\r\n  //검색 기록 클릭 시 이미지랑 정보 보여주기\r\n  const pressStack = (i) => {\r\n    setImageUri(stack[i].url)\r\n    setBreedInfo(stack[i])\r\n  }\r\n\r\n  return (\r\n    <ScrollView\r\n      contentContainerStyle={styles.contentContainer}\r\n      centerContent={true}\r\n    >\r\n      <View style={styles.container}>\r\n        {/* Catbook */}\r\n        {whatBook === 'cat' ? (\r\n          <Text style={styles.title}>Catbook 🐈</Text>\r\n        ) : (\r\n          <Text style={styles.title}>Dogbook 🐕</Text>\r\n        )}\r\n\r\n        {/* 고양이 이미지 */}\r\n        {imageUri === null ? (\r\n          <>\r\n            {whatBook === 'cat' ? (\r\n              <Image source={catMain} style={styles.image} />\r\n            ) : (\r\n              <Image source={dogMain} style={styles.image} />\r\n            )}\r\n          </>\r\n        ) : (\r\n          <Image source={{ uri: imageUri }} style={styles.image} />\r\n        )}\r\n\r\n        {/* 고양이 설명 */}\r\n        {breedInfo && (\r\n          <>\r\n            {breedInfo !== 'noInfo' ? (\r\n              <View style={styles.textContainer}>\r\n                <Text style={styles.contentText}>\r\n                  - 종류: {breedInfo.breeds?.[0].name}\r\n                </Text>\r\n                {breedInfo.breeds?.[0].alt_names !== undefined && (\r\n                  <Text style={styles.contentText}>\r\n                    - 별명: {breedInfo.breeds?.[0].alt_names}\r\n                  </Text>\r\n                )}\r\n                {breedInfo.breeds?.[0].origin !== undefined && (\r\n                  <Text style={styles.contentText}>\r\n                    - 출신지: {breedInfo.breeds?.[0].origin}\r\n                  </Text>\r\n                )}\r\n                {breedInfo.breeds?.[0].adaptability !== undefined && (\r\n                  <Text style={styles.contentText}>\r\n                    - 적응력 / 애정도 / 에너지:{' '}\r\n                    {breedInfo.breeds?.[0].adaptability} /{' '}\r\n                    {breedInfo.breeds?.[0].affection_level} /{' '}\r\n                    {breedInfo.breeds?.[0].energy_level}\r\n                  </Text>\r\n                )}\r\n                {breedInfo.breeds?.[0].child_friendly !== undefined && (\r\n                  <Text style={styles.contentText}>\r\n                    - 어린이친화력 / 강아지친화력:{' '}\r\n                    {breedInfo.breeds?.[0].child_friendly} /{' '}\r\n                    {breedInfo.breeds?.[0].dog_friendly}\r\n                  </Text>\r\n                )}\r\n                {breedInfo.breeds?.[0].temperament !== undefined && (\r\n                  <Text style={styles.contentText}>\r\n                    - 성격: {breedInfo.breeds?.[0].temperament}\r\n                  </Text>\r\n                )}\r\n                {breedInfo.breeds?.[0].description !== undefined && (\r\n                  <Text style={styles.contentText}>\r\n                    - 특징: {breedInfo.breeds?.[0].description}\r\n                  </Text>\r\n                )}\r\n              </View>\r\n            ) : (\r\n              <View style={styles.textContainer}>\r\n                <Text style={{ textAlign: 'center' }}>\r\n                  찾는 정보가 없어요 😥\r\n                </Text>\r\n              </View>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {/* 고양이 종 목록 */}\r\n        {breeds && (\r\n          <DropDownPicker\r\n            open={open}\r\n            value={breed || 'random'}\r\n            items={breeds}\r\n            setOpen={setOpen}\r\n            setValue={setBreed}\r\n            setItems={setBreeds}\r\n          />\r\n        )}\r\n\r\n        {/* 찾기 버튼 */}\r\n        <TouchableOpacity\r\n          onPress={handleButton}\r\n          style={breeds.length === 0 ? styles.buttonDisabled : styles.button}\r\n          disabled={breeds.length === 0}\r\n        >\r\n          <Text style={styles.buttonText}>\r\n            {whatBook === 'cat' ? '고양이 찾기' : '강아지 찾기'}\r\n          </Text>\r\n        </TouchableOpacity>\r\n\r\n        {/* Cat Dog 전환 */}\r\n        <View style={styles.changeBookView}>\r\n          <Text\r\n            style={styles.stackText}\r\n            onClick={() => {\r\n              setStack([])\r\n              setBreedInfo(null)\r\n              setImageUri(whatBook === 'dog' ? dogMain : catMain)\r\n            }}\r\n          >\r\n            검색기록 초기화\r\n          </Text>\r\n          <Text\r\n            style={styles.changeBookText}\r\n            onPress={() => {\r\n              whatBook === 'cat' ? setWhatBook('dog') : setWhatBook('cat')\r\n              setBreed('')\r\n              setBreeds([])\r\n              setImageUri(null)\r\n              setBreedInfo(null)\r\n              setRandomable(false)\r\n            }}\r\n          >\r\n            {whatBook === 'cat' ? '강아지 좋아해?' : '고양이 보러갈래?'}\r\n          </Text>\r\n        </View>\r\n\r\n        <View style={styles.stackView}>\r\n          {stack.length > 0 && (\r\n            <div style={styles.stackRow}>\r\n              <Text style={styles.stackTitle}>\r\n                {whatBook === 'cat' ? '찾아본 고양이' : '찾아본 강아지'}\r\n              </Text>\r\n            </div>\r\n          )}\r\n          {stack.map(\r\n            (i, idx) =>\r\n              whatBook === i.animal && (\r\n                <TouchableOpacity\r\n                  style={styles.stackFlex}\r\n                  key={idx}\r\n                  onPress={() => pressStack(idx)}\r\n                >\r\n                  <Image source={{ uri: i.url }} style={styles.stackImg} />\r\n                  <Text style={styles.stackText}>{i.breeds?.[0]?.name}</Text>\r\n                </TouchableOpacity>\r\n              ),\r\n          )}\r\n        </View>\r\n      </View>\r\n      <GithubIcon />\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nexport default BreedInfoPage\r\n","import React from 'react'\r\nimport { SafeAreaView } from 'react-native'\r\n\r\nimport BreedInfoPage from './container/BreedInfoPage.jsx'\r\nimport { styles } from './styles.js'\r\n\r\nconsole.info('### ENV:', process.env.NODE_ENV)\r\n\r\nexport default function App() {\r\n  return (\r\n    <SafeAreaView style={styles.safeContainer}>\r\n      <BreedInfoPage />\r\n    </SafeAreaView>\r\n  )\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/dog_main.d60d4c9c.png\";","module.exports = __webpack_public_path__ + \"static/media/main.39efc8fa.png\";","module.exports = __webpack_public_path__ + \"static/media/github_small.e5f70eae.png\";"],"sourceRoot":""}